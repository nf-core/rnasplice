/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    nf-core/rnasplice Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    // TODO nf-core: Specify your pipeline's command line flags
    // Input options
    input                      = null

    // References
    genome                     = null
    igenomes_base              = 's3://ngi-igenomes/igenomes'
    igenomes_ignore            = false
    transcript_fasta           = null
    gtf_extra_attributes       = 'gene_name'
    gtf_group_features         = 'gene_id'
    gencode                    = false
    save_reference             = false

    // Trimming
    clip_r1                    = null
    clip_r2                    = null
    three_prime_clip_r1        = null
    three_prime_clip_r2        = null
    trim_nextseq               = null
    save_trimmed               = false
    skip_trimming              = true
    skip_trimgalore_fastqc     = false

    // QC
    skip_fastqc                = false
    skip_bigwig                = true

    // Alignment
    aligner                    = 'star'
    pseudo_aligner             = 'salmon'
    bam_csi_index              = false
    seq_center                 = null
    salmon_quant_libtype       = null
    star_ignore_sjdbgtf        = false
    skip_alignment             = true
    save_unaligned             = false
    save_align_intermeds       = false
    save_merged_fastq          = false

    // rMATs
    rmats                      = true
    rmats_splice_diff_cutoff   = 0.0001
    rmats_paired_stats         = true
    rmats_read_len             = 40
    rmats_novel_splice_site    = false
    rmats_min_intron_len       = 50
    rmats_max_exon_len         = 500

    // DEXSeq DEU
    dexseq_exon                = false
    gff_dexseq                 = null
    dexseq_read_method         = 'htseq' // htseq or featurecounts
    alignment_quality          = 10
    aggregation                = true
    deu_lfc_denominator        = "GBR"

    // edgeR DEU
    edger_exon                 = false

    // DEXSeq DTU
    dexseq_dtu                 = false
    dtu_txi                    = 'dtuScaledTPM' // dtuScaledTPM or scaledTPM
    dtu_lfc_denominator        = "GBR"

    // DRIMSeq Filtering
    min_samps_feature_expr     =  2
    min_samps_feature_prop     =  2
    min_samps_gene_expr        =  4
    min_feature_expr           =  10
    min_feature_prop           =  0.1
    min_gene_expr              =  10

    // MultiQC options
    multiqc_config             = null
    multiqc_title              = null
    max_multiqc_email_size     = '25.MB'

    // SUPPA options
    suppa                      = true
    suppa_per_local_event      = true
    suppa_per_isoform          = true
    suppa_tpm                  = null // "${projectDir}/assets/tpm.txt"

    // SUPPA Generate events options
    generateevents_pool_genes  = true /* SUPPA advises using this option */
    generateevents_localevents = 'SE SS MX RI FL' /* Values like - SE SS MX RI FL */
    generateevents_boundary    = 'S' /*Boundary type (Default : S )(Options: S -- Strict, V -- Variable) */
    generateevents_threshold   = 10 /*Variability threshold (Default: 10nt). In case of strict boundaries this argument is ignored */
    generateevents_exon_length = 100 /*Defines the number of nucleotides to display in the output GTF. (Default: 100 nt) */
    psiperevent_total_filter   = 0 /*Minimum total expression of the transcripts involved in the event (Default : 0).
                                     If used, it will filter out the events that do not reach this total expression value
                                     for the transcripts defining the event (the denominator of the PSI calculation). */

    // SUPPA Diffsplice options
    diffsplice_local_event     = true
    diffsplice_isoform         = true
    diffsplice_method          = 'empirical' /* empirical or classical */
    diffsplice_area            = 1000 /* Default - 1000 */
    diffsplice_lower_bound     = 0 /* Default - 0 */
    diffsplice_gene_correction = true /* Perform Correction of the p-values by gene */
    diffsplice_paired          = true /* replicates across conditions are paired */
    diffsplice_alpha           = 0.05 /* Family-wise error rate to use for the multiple test correction (Default - 0.05) */
    diffsplice_median          = false /* use the median to calculate the Delta PSI, instead of the mean */
    diffsplice_tpm_threshold   = 0 /* Minimum expression to be included in the analysis (Default: 0) */
    diffsplice_nan_threshold   = 0 /* Proportion of samples with nan values allowed per condition to calculate a DeltaPSI (Default: 0) */

    // SUPPA Cluster options
    clusterevents_local_event  = true
    clusterevents_isoform      = true
    clusterevents_sigthreshold = null /* p-value threshold to consider an event significant from the dpsi file */
    clusterevents_dpsithreshold= 0.05 /* Lower-bound for the absolute delta PSI value to cluster (Default: 0.05) */
    clusterevents_eps          = 0.05 /* Maximum distance (between 0 and 1) to consider two events as members of the same cluster (Default: 0.05) */
    clusterevents_metric       = 'euclidean' /* distance metric. Choices: euclidean, manhattan, cosine (Default:euclidean) */
    clusterevents_separation   = null /* maximum distance in PSI space of an event to a cluster. Required for OPTICS method */
    clusterevents_min_pts      = 20 /* Minimum number of events required per cluster (Default: 20) */
    clusterevents_method       = 'DBSCAN' /* Clustering method to use (DBSCAN, OPTICS). (Default: DBSCAN) */

    // Boilerplate options
    outdir                     = null
    tracedir                   = "${params.outdir}/pipeline_info"
    publish_dir_mode           = 'copy'
    email                      = null
    email_on_fail              = null
    plaintext_email            = false
    monochrome_logs            = false
    help                       = false
    validate_params            = true
    show_hidden_params         = false
    schema_ignore_params       = 'genomes'
    enable_conda               = false

    // Config options
    custom_config_version      = 'master'
    custom_config_base         = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_description = null
    config_profile_contact     = null
    config_profile_url         = null
    config_profile_name        = null

    // Max resource options
    // Defaults only, expecting to be overwritten
    max_memory                 = '128.GB'
    max_cpus                   = 16
    max_time                   = '240.h'

}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

// Load nf-core custom profiles from different Institutions
try {
    includeConfig "${params.custom_config_base}/nfcore_custom.config"
} catch (Exception e) {
    System.err.println("WARNING: Could not load nf-core/config profiles: ${params.custom_config_base}/nfcore_custom.config")
}

// Load nf-core/rnasplice custom profiles from different institutions.
// Warning: Uncomment only if a pipeline-specific instititutional config already exists on nf-core/configs!
// try {
//   includeConfig "${params.custom_config_base}/pipeline/rnasplice.config"
// } catch (Exception e) {
//   System.err.println("WARNING: Could not load nf-core/config/rnasplice profiles: ${params.custom_config_base}/pipeline/rnasplice.config")
// }


profiles {
    debug { process.beforeScript = 'echo $HOSTNAME' }
    conda {
        params.enable_conda    = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    docker {
        docker.enabled         = true
        docker.userEmulation   = true
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    singularity {
        singularity.enabled    = true
        singularity.autoMounts = true
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    podman {
        podman.enabled         = true
        docker.enabled         = false
        singularity.enabled    = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    shifter {
        shifter.enabled        = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        charliecloud.enabled   = false
    }
    charliecloud {
        charliecloud.enabled   = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
    }
    test      { includeConfig 'conf/test.config'      }
    test_full { includeConfig 'conf/test_full.config' }
}

// Load igenomes.config if required
if (!params.igenomes_ignore) {
    includeConfig 'conf/igenomes.config'
} else {
    params.genomes = [:]
}

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.tracedir}/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.tracedir}/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.tracedir}/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.tracedir}/pipeline_dag_${trace_timestamp}.html"
}

manifest {
    name            = 'nf-core/rnasplice'
    author          = 'Ben Southgate'
    homePage        = 'https://github.com/nf-core/rnasplice'
    description     = 'Alternative splicing analysis using RNA-seq.'
    mainScript      = 'main.nf'
    nextflowVersion = '!>=21.10.3'
    version         = '1.0dev'
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
    if (type == 'memory') {
        try {
            if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
                return params.max_memory as nextflow.util.MemoryUnit
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'time') {
        try {
            if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
                return params.max_time as nextflow.util.Duration
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'cpus') {
        try {
            return Math.min( obj, params.max_cpus as int )
        } catch (all) {
            println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
            return obj
        }
    }
}
